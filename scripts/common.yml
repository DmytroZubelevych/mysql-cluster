actions:
  getMonitorUser:
    - env.control.GetContainerEnvVarsByGroup[sqldb]
    - setGlobals:
        MONITOR_USER: ${response.object.MONITOR_USER}
        MONITOR_PSWD: ${response.object.MONITOR_PSWD}
    - if (/response/.test("${globals.MONITOR_USER}") && /response/.test("${globals.MONITOR_PSWD}")):
        - setMonitorUser
        - setupUser:
            DB_USER: ${settings.DB_USER}
            DB_PASS: ${settings.DB_PASS}
            user: ${globals.MONITOR_USER}
            pswd: ${globals.MONITOR_PSWD}
            id: sqldb
  
  setMonitorUser:
    - setGlobals:
        MONITOR_USER: monitor-${fn.random}
        MONITOR_PSWD: ${fn.password(20)}
    - env.control.AddContainerEnvVars[sqldb]:
        vars:
          MONITOR_USER: ${globals.MONITOR_USER}
          MONITOR_PSWD: ${globals.MONITOR_PSWD}

  setupUser:
    cmd[${this.id}]: |-
      MYSQL_PWD=${globals.DB_PASS:this.DB_PASS} mysql -u${globals.DB_USER:this.DB_USER} -e "CREATE USER '${this.user}'@'%' IDENTIFIED BY '${this.pswd}';"
      MYSQL_PWD=${globals.DB_PASS:this.DB_PASS} mysql -u${globals.DB_USER:this.DB_USER} -e "GRANT USAGE, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO '${this.user}'@'%';"
      MYSQL_PWD=${globals.DB_PASS:this.DB_PASS} mysql -u${globals.DB_USER:this.DB_USER} -e "FLUSH PRIVILEGES;"

  setupAdminUser:
    - cmd[${this.id}]: |-
        wget ${globals.PATH}/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log;
        bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log;
      user: root

  setupUsers:
    - setupAdminUser: 
        id: ${this.id}
    - setupUser: 
        id: ${this.id}
        user: ${globals.MONITOR_USER}
        pswd: ${globals.MONITOR_PSWD}
    - setupUser: 
        id: ${this.id}
        user: ${globals.REPLICATION_USER}
        pswd: ${globals.REPLICATION_PASS}
