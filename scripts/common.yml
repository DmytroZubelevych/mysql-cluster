actions:
  getMonitorUser:
    - env.control.GetContainerEnvVarsByGroup[sqldb]
    - setGlobals:
        MONITOR_USER: ${response.object.MONITOR_USER}
        MONITOR_PSWD: ${response.object.MONITOR_PSWD}
    - if (/response/.test("${globals.MONITOR_USER}") && /response/.test("${globals.MONITOR_PSWD}")):
        return:
          type: error
          message: Monitor user does not exist

  setupUser:
    - if (/mysql/.test("${nodes.sqldb.nodeType}")):
        cmd[${this.id}]: |-
          MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "CREATE USER '${this.user}'@'%' IDENTIFIED BY '${this.pswd}';"
          MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "GRANT USAGE, REPLICATION CLIENT ON *.* TO '${this.user}'@'%';"
          MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "FLUSH PRIVILEGES;"

    - if (/mariadb/.test("${nodes.sqldb.nodeType}")):
      - if ('${fn.compare([nodes.sqldb.version], 10.5)}' == -1):
          cmd[${this.id}]: |-
            MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "CREATE USER '${this.user}'@'%' IDENTIFIED BY '${this.pswd}';"
            MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "GRANT USAGE, REPLICATION CLIENT ON *.* TO '${this.user}'@'%';"
            MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "FLUSH PRIVILEGES;"
      - else:
          cmd[${this.id}]: |-
            MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "CREATE USER '${this.user}'@'%' IDENTIFIED BY '${this.pswd}';"
            MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "GRANT USAGE,SLAVE MONITOR,BINLOG MONITOR ON *.* TO '${this.user}'@'%';"
            MYSQL_PWD=${globals.DB_PASS} mysql -u${globals.DB_USER} -e "FLUSH PRIVILEGES;"

  setupAdminUser:
    - cmd[${this.id]: |-
        wget ${globals.PATH}/scripts/setupUser.sh -O ~/setupUser.sh &>> /var/log/run.log;
        bash ~/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log;
      user: root

  setupUsers:
    - setupAdminUser: 
        id: ${this.id}
    - setupUser: 
        id: ${this.id}
        user: ${globals.MONITOR_USER}
        pswd: ${globals.MONITOR_PSWD}
    - setupUser: 
        id: ${this.id}
        user: ${globals.REPLICATION_USER}
        pswd: ${globals.REPLICATION_PASS}
