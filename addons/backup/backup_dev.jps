{
  "jpsType": "update",
  "id": "mysql-backup-addon",
  "baseUrl": "https://raw.githubusercontent.com/jelastic-jps/docker-native/master/addons",
  "description": {
    "short": "Mysql Backup"
  },
  "globals": {
    "volume": "/var/lib/jelastic/backup",
    "backupScript": "/var/lib/jelastic/bin/backup.sh",
    "backupIni": "/var/lib/jelastic/bin/backup.ini",
    "s3cfg": "/var/lib/jelastic/backup/s3cfg"
  },
  "name": "Mysql Backup",
  "settings": {
    "fields": [
      {
        "name": "cron",
        "caption": "Backup schedule",
        "type": "radio-fieldset",
        "values": {
          "default": "Use template",
          "advanced": "Advanced backup schedule"
        },
        "default": "default",
        "showIf": {
          "default": {
            "name": "cron",
            "caption": "Backup schedule",
            "type": "list",
            "values": {
              "0 6 1/1 * *": "Daily at 6:00 am",
              "*/30 * * * *": "Every 30 minutes",
              "0 */1 * * *": "Hourly",
              "0 */4 * * *": "Every 4 hours",
              "0 */6 * * *": "Every 6 hours",
              "0 */12 * * *": "Every 12 hours",
              "0 6 1/7 * *": "Each Sunday at 6:00 am"
            },
            "default": "0 */12 * * *"
          },
          "advanced": {
            "type": "string",
            "name": "advanced_cron",
            "caption": "Advanced"
          }
        }
      },
      {
        "type": "spinner",
        "name": "backup_count",
        "caption": "Retain last N backups",
        "min": 1,
        "max": 100,
        "default": 5
      },
      {
        "name": "backup-mode",
        "caption": "Backup location",
        "type": "radio-fieldset",
        "values": {
          "nfs": "Storage Container",
          "lfs": "Local file system",
          "s3": "S3 Service"
        },
        "default": "lfs",
        "showIf": {
          "s3": [
            {
              "name": "host_base",
              "type": "string",
              "caption": "S3 Host Base URI",
              "default": "s3.amazonaws.com",
              "required": true
            },
            {
              "name": "access_key",
              "type": "string",
              "caption": "Access Key",
              "default": "",
              "required": true
            },
            {
              "name": "secret_key",
              "type": "string",
              "caption": "Bucket name",
              "default": "",
              "required": true
            }
          ],
          "nfs": [
            {
              "name": "storage",
              "caption": "Storage container",
              "type": "list",
              "values": {
                "existed_contained": "Use existing storage container",
                "new_storage": "Create new storage container"
              },
              "default": "existed_contained"
            },
            {
              "name": "backup_path",
              "caption": "Backup path",
              "type": "string"
            }
          ]
        }
      },
      {
        "name": "db_user",
        "type": "string",
        "caption": "DB User",
        "default": "",
        "required": true
      },
      {
        "name": "db_password",
        "type": "string",
        "caption": "DB Password",
        "default": "",
        "required": true
      }
    ]
  },
  "onInstall": [
    "setup",
    {
      "if ('${settings.backup-mode}' == 'nfs')": "addStorage"
    },
    {
      "if ('${settings.backup-mode}' == 's3')": "setupS3"
    },
    "setupCron"
  ],
  "actions": {
    "setup": {
      "cmd[${nodes.sqldb.first.id}]": [
        "echo \"BACKUP_MODE='${settings.backup-mode}' #lfs nfs s3\" > ${globals.backupIni}",
        "echo DB_USER='${settings.db_user}' >> ${globals.backupIni}",
        "echo DB_PASSWORD='${settings.db_password}' >> ${globals.backupIni}",
        "echo BACKUPDIR='${globals.volume}' >> ${globals.backupIni}",
        "echo NUMBER_OF_BACKUPS='${settings.backup_count}' >> ${globals.backupIni}",
        "wget https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/master/addons/backup/backup.sh -O ${globals.backupScript}"
      ]
    },
    "setupS3": {
      "cmd[${nodes.sqldb.first.id}]": [
        "echo [default] > ${globals.s3cfg}",
        "echo access_key = '${settings.access_key}' >> ${globals.s3cfg}",
        "echo secret_key = '${settings.secret_key}' >> ${globals.s3cfg}",
        "echo host_base = '${settings.host_base}' >> ${globals.s3cfg}",
        "echo host_bucket = '${settings.host_base}' >> ${globals.s3cfg}",
        "echo S3_CONF='${globals.s3cfg}' >> ${globals.backupIni}"
      ]
    },
    "addStorage": {
      "if (!nodes.backup)": [
        {
          "addNodes": {
            "cloudlets": 8,
            "displayName": "Backup",
            "nodeType": "docker",
            "nodeGroup": "backup",
            "dockerName": "jelastic/storage",
            "dockerTag": "latest",
            "metadata": {
              "layer": "backup"
            },
            "dockerVolumes": [
              "${globals.volume}"
            ]
          }
        },
        {
          "script": [
            "var resp = jelastic.environment.control.GetEnvInfo('${env.envName}', session);",
            "if (resp.result != 0) return resp;",
            "for (var i = 0; resp.nodes; i++) {",
            "  var node = resp.nodes[i]",
            "  if (node.nodeGroup == 'backup' && node.ismaster) {",
            "    return { result: 0, onAfterReturn : {addBackupVolume: {backupNodeId: node.id}}};",
            "  }",
            "}"
          ]
        }
      ]
    },
    "addBackupVolume": [
      {
        "api": "env.control.AddContainerVolume",
        "nodeId": "${nodes.sqldb.first.id}",
        "path": "${globals.volume}"
      },
      {
        "api": "env.file.AddMountPointById",
        "nodeId": "${nodes.sqldb.first.id}",
        "path": "${globals.volume}",
        "protocol": "nfs",
        "sourcePath": "${globals.volume}",
        "sourceNodeId": "${this.backupNodeId}",
        "name": "Backup Volume",
        "readOnly": false
      }
    ],
    "setupCron": {
      "cmd[${nodes.sqldb.first.id}]": [
        "crontab -l 2>/dev/null | sed \"/backup/d\" | crontab -",
        "crontab -l 2>/dev/null | { cat; echo \"${settings.cron}  /bin/bash ${globals.backupScript} ${globals.backupIni}\n\"; } | crontab - ;"
      ]
    }
  },
  "success": {
    "text": "success! ",
    "email": "success! "
  },
  "jpsVersion": "0.9"
}
