jpsType: update
id: mysql-auto-cluster-logic
name: Database Cluster
skipNodeEmails: true

globals:
  path: "${settings.path}"
  scripts: "${settings.path}/scripts"

nodeGroupAlias:
  "${targetNodes.nodeGroup}": sqldb

onBeforeResetNodePassword[sqldb]:
  - cmd[${events.response.nodeid}]: 
      sed -i "s/^\!includedir/#\!includedir/g" /etc/my.cnf
    user: root

onAfterResetNodePassword[sqldb]:
  - cmd[${events.response.nodeid}]: |-
      sed -i "s/^#\!includedir/\!includedir/g" /etc/my.cnf
      jem service restart
    user: root

onInstall:

  if (nodes.proxy):
    - setupCluster
  if (!nodes.proxy):
    if (nodes.sqldb.length > 1): setupCluster

onAfterScaleOut[sqldb]:
  if (!nodes.proxy): setupCluster

actions:
  
  install-jps:
    install:
      jps: "${this.jps}"
      nodeGroup: sqldb
      settings:
        db_user: "${settings.db_user}"
        db_pass: "${settings.db_pass}"
        scheme: "${settings.scheme}"
        path: "${globals.path}"

  addProxyNodes:
    - addNodes:
        cloudlets: 8
        displayName: ProxySQL
        nodeType: proxysql
        nodeGroup: proxy
        scalingMode: stateless
      nodeGroupData:
        validation :
          minCount: 2
          maxCount: 2

    - addNodes:
        cloudlets: 8
        displayName: ProxySQL
        nodeType: proxysql
        nodeGroup: proxy
        scalingMode: stateless
      nodeGroupData:
        validation :
          minCount: 2
          maxCount: 2
          
    - api: env.control.SetNodeGroupDisplayName
      nodeGroup: proxy
      displayName: DB Load Balancer

    
  setupCluster:
  
    - if (!nodes.proxy && '${settings.is_proxysql}' == 'true'): addProxyNodes
    
    - install: https://raw.githubusercontent.com/sych74/validator/master/manifest.jps

    - if (nodes.sqldb.length == 2):
        - install-jps:
            jps: "${globals.scripts}/master-slave.jps?_r=${fn.random}"
        - if ('${settings.is_proxysql}' == 'true'):    
          - install-jps:
              jps: "${globals.scripts}/proxy-master-slave.jps?_r=${fn.random}"
    
    - if (nodes.sqldb.length > 2):
      - if (/mysql/.test("${nodes.sqldb.nodeType}")):

        - if ('${settings.scheme}'.toLowerCase() == 'master'):
          - install-jps:
              jps: "${globals.scripts}/master-slave.jps?_r=${fn.random}"
          - if ('${settings.is_proxysql}' == 'true'):    
            - install-jps:
                jps: "${globals.scripts}/proxy-master-slave.jps?_r=${fn.random}"
        
        - if ('${settings.scheme}'.toLowerCase() == 'slave'):
          - install-jps:
              jps: "${globals.scripts}/master-slave.jps?_r=${fn.random}"
          - if ('${settings.is_proxysql}' == 'true'):    
            - install-jps:
                jps: "${globals.scripts}/proxy-master-slave.jps?_r=${fn.random}"

      - if (/mariadb/.test("${nodes.sqldb.nodeType}")):
        - if ('${settings.scheme}'.toLowerCase() == 'galera'):  
          - install-jps:
              jps: "${globals.scripts}/galera.jps?_r=${fn.random}"
          - if ('${settings.is_proxysql}' == 'true'):    
            - install-jps:
                jps: "${globals.scripts}/proxy-galera.jps?_r=${fn.random}"
      
        - if ('${settings.scheme}'.toLowerCase() != 'galera'):  
          - install-jps:
              jps: "${globals.scripts}/master-slave.jps?_r=${fn.random}"
          - if ('${settings.is_proxysql}' == 'true'):    
            - install-jps:
                jps: "${globals.scripts}/proxy-master-slave.jps?_r=${fn.random}"
  
