type: update
id: galera-recovery
name: Galera Cluster Recovery
        
onInstall:
  - reseBootstrap
  - bootstrap
  - forEach(n:nodes.sqldb):
      if ('${@n.id}' != '${globals.BOOTSTRAP_NODE}'):
        cmd[${@n.id}]: sudo jem service restart;

actions:
  reseBootstrap:
    - cmd[sqldb]: |-
        sudo jem service stop;
        sed -i "s/safe_to_bootstrap.*/safe_to_bootstrap: 0/" /var/lib/mysql/grastate.dat

  bootstrap:
    - script: |
        var resp = jelastic.env.control.GetEnvInfo('${env.envName}', session);
        if (resp.result != 0) return resp;
        var nodeID, count, maxCount = 0;
        for (var i = 0, n = resp.nodes; i < n.length; i++) {
          if (n[i].nodeGroup == nodeGroup) {
            var resp = jelastic.env.control.ExecCmdById(getParam('TARGET_APPID'), session, n[i].id, toJSON([{ "command": "cat /var/log/mysql/mysqld.log | grep 'Found saved state' | tail -1 | awk -F ':' '{print $6}' | awk -F ',' '{print $1}'"}]), false, "root");
            count = parseInt(resp.responses[0].out, 10);
            if (count > maxCount) {
              maxCount = count;
              nodeID = n[i].id;
            }
          }
        }
        return { result: 0, nodeID: nodeID }
      nodeGroup: sqldb
    - setGlobals:
        BOOTSTRAP_NODE: ${response.nodeID}
    - cmd[${globals.BOOTSTRAP_NODE}]: |-
        sed -i "s/safe_to_bootstrap.*/safe_to_bootstrap: 1/" /var/lib/mysql/grastate.dat
        sudo jem service restart;
        

      
